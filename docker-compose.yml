version: "2"

services:
  ghost:
    image: ghost:alpine
    volumes:
      - ./ghostdata:/var/lib/ghost/content
    environment:
      - url=${URL}
      - database__client=mysql
      - database__connection__host=db
      - database__connection__user=ghostdb
      - database__connection__password=${GHOSTDB_PASSWORD}
      - database__connection__database=ghostdb
      - VIRTUAL_HOST=${LETSENCRYPT_DOMAINS}
      - VIRTUAL_PORT=2368
      - LETSENCRYPT_HOST=${LETSENCRYPT_DOMAINS}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - mail__from=${mail__from}
      - mail__options__host=${mail__options__host}
      - mail__options__auth__user=${mail__options__auth__user}
      - mail__options__auth__pass=${mail__options__auth__pass}
      - mail__options__port=${mail__options__port}
      - mail__options__service=${mail__options__service}
      - mail__transport=${mail__transport}
    networks:
      - ghost
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: mysql
    volumes:
      - ./ghostdb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${ROOTDB_PASSWORD}
      - MYSQL_DATABASE=ghostdb
      - MYSQL_USER=ghostdb
      - MYSQL_PASSWORD=${GHOSTDB_PASSWORD}
    networks:
      - ghost
    restart: unless-stopped

  nginx-proxy:
    build: .
    volumes: 
      - certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - ghost
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: ""
    restart: unless-stopped

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
    networks:
      - ghost
    restart: unless-stopped

volumes:
  certs:

networks:
  ghost:
